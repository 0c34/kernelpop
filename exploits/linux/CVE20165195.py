"""
Dirty Cow
"""
import os
from exploits.exploit import Exploit
from src.kernels import KernelWindow
from constants import color_print, GENERIC_LINUX, CONFIRMED_VULNERABLE, HIGH_RELIABILITY, LINUX_EXPLOIT_SOURCE_PATH, \
	PLAYGROUND_PATH

class CVE20165195(Exploit):
	def __init__(self):
		super().__init__()
		self.name = "CVE20165195"
		self.formatted_name = "CVE-2016-5195"
		self.type = "linux"
		self.brief_desc = "Dirty COW race condition root priv esc"
		self.reliability = HIGH_RELIABILITY
		self.vulnerable_kernels = [
			KernelWindow(GENERIC_LINUX, CONFIRMED_VULNERABLE, 2, 0, 0, 4, 8, 3)
		]
		self.source_c_path = os.path.join(LINUX_EXPLOIT_SOURCE_PATH, "{}.c".format(self.name))
		self.compilation_path = os.path.join(PLAYGROUND_PATH, self.name)
		self.compilation_command = ["gcc", "-o", self.compilation_path, self.source_c_path, "-pthread"]
		self.exploit_command = self.compilation_path

	def determine_vulnerability(self):
		color_print("\t[*] checking exploitation prerequisites for {}".format(self.name), color="blue")
		# if kernel matches...it should be vulnerable
		color_print("\t[+] system appears to be vulnerable to {}".format(self.name), color="green")
		return True

	def exploit(self):
		self.exploit_failure("you need to work from exploit source found at {}".format(self.source_c_path))
