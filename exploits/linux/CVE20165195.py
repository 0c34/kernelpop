"""
Dirty Cow
"""
import os
from src.kernels import KernelWindow
from constants import LOW_RELIABILITY, PLAYGROUND_PATH, color_print, UBUNTU_GENERIC, UBUNTU_16, UBUNTU_16_LTS, \
	UBUNTU_14_LTS, UBUNTU_12_LTS, CONFIRMED_VULNERABLE, POTENTIALLY_VULNERABLE, HIGH_RELIABILITY

class CVE20165195:
	def __init__(self):
		self.name = "CVE-2016-5195"
		self.type = "linux"
		self.brief_desc = "Dirty COW race condition root priv esc"
		self.reliability = HIGH_RELIABILITY
		self.vulnerable_kernels = [
			KernelWindow(UBUNTU_GENERIC, 	POTENTIALLY_VULNERABLE, 0, 0, 0, 4, 8, 26),
			KernelWindow(UBUNTU_16, 		CONFIRMED_VULNERABLE, 0, 0, 0, 4, 8, 26),
			KernelWindow(UBUNTU_16_LTS, 	CONFIRMED_VULNERABLE, 0, 0, 0, 4, 4, 45),
			KernelWindow(UBUNTU_14_LTS, 	CONFIRMED_VULNERABLE, 0, 0, 0, 3, 13, 100),
			KernelWindow(UBUNTU_12_LTS, 	CONFIRMED_VULNERABLE, 0, 0, 0, 3, 2, 113)
		]
		self.source_c_path = "Need a source path to the exploit file to compile"
		self.compilation_path = os.path.join(PLAYGROUND_PATH, "exploit")
		self.compilation_command = ["gcc", self.source_c_path, "-o", self.compilation_path]
		self.exploit_command = "./pwn -o allyourbase.txt -i l33t.skills"

	def determine_vulnerability(self):
		color_print("\t[*] checking exploitation prerequisites for {}".format(self.name), color="blue")
		# if kernel matches...it should be vulnerable
		color_print("\t[+] system appears to be vulnerable to {}".format(self.name), color="green")
		return True
