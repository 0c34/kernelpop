import os
import subprocess
from exploits.exploit import Exploit
from src.kernels import KernelWindow
from constants import PLAYGROUND_PATH, LINUX_EXPLOIT_PATH, HIGH_RELIABILITY, color_print, UBUNTU_GENERIC, \
	CONFIRMED_VULNERABLE, DEBIAN_7, DEBIAN_8, DEBIAN_UNSTABLE

class CVE20177308(Exploit):
	def __init__(self):
		super().__init__()
		self.name = "CVE-2017-7308"
		self.type = "linux"
		self.brief_desc = "`packet_set_ring` in net/packet/af_packet.c can gain privileges via crafted system calls."
		self.reliability = HIGH_RELIABILITY
		self.vulnerable_kernels = [
			KernelWindow(UBUNTU_GENERIC, CONFIRMED_VULNERABLE, 0, 0, 0, 4, 10, 6),
			KernelWindow(DEBIAN_7, CONFIRMED_VULNERABLE, 0, 0, 0, 3, 2, 88),
			KernelWindow(DEBIAN_8, CONFIRMED_VULNERABLE, 0, 0, 0, 3, 16, 43),
			KernelWindow(DEBIAN_UNSTABLE, CONFIRMED_VULNERABLE, 0, 0, 0, 4, 9, 17)
		]
		self.source_c_path = os.path.join(LINUX_EXPLOIT_PATH, "CVE20177308.c")
		self.compilation_path = os.path.join(PLAYGROUND_PATH, "CVE20177308")
		self.compilation_command = ["gcc", self.source_c_path, "-o", self.compilation_path]
		self.exploit_command = self.compilation_path

	def determine_vulnerability(self):
		color_print("\t[*] checking exploitation prerequisites for {}".format(self.name), color="blue")
		# if kernel matches...it should be vulnerable
		color_print("\t[+] system appears to be vulnerable to {}".format(self.name), color="green")
		return True