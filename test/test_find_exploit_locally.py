import unittest
from src.kernelpop import potentially_vulnerable, find_exploit_locally, display_ordered_exploits
from src.kernelpop import Kernel
from exploits.linux.CVE20091185 import CVE20091185
from constants import HIGH_RELIABILITY


class TestGetKernelVersion(unittest.TestCase):

	def test_potentially_vulnerable(self):
		test_uname = "Linux-4.10.0-37-generic-x86_64-with-Ubuntu-16.04-xenial"
		test_kernel = Kernel(test_uname)
		exploit_module = CVE20091185()
		self.assertTrue(potentially_vulnerable(test_kernel, exploit_module))

	def test_find_exploit_locally(self):
		test_uname = "Linux-4.10.0-1-generic-x86_64-with-Ubuntu-16.04-xenial"
		test_kernel = Kernel(test_uname)
		exploit_results = find_exploit_locally(test_kernel)
		self.assertGreaterEqual(len(exploit_results["confirmed"][HIGH_RELIABILITY]), 1)


if __name__ ==  "__main__":
	unittest.main()
