# SQL Schema for relevant data structures

# Table to hold exploit data relevant to searching for kernel-specific exploits
#   and finding relevant files to exploits in the kernelpop project file structure.
drop table if exists exploit;
create table exploit (
  id                          INT             AUTO_INCREMENT NOT NULL,
  os                          VARCHAR(20)     NOT NULL,
  name                        VARCHAR(50)     NOT NULL,
  earliest_kernel_version     VARCHAR(50)     NOT NULL,
  latest_kernel_version       VARCHAR(50)     NOT NULL,
  file_path                   VARCHAR(100)    NOT NULL,
  disclosure_date             DATE            NOT NULL
);

insert into exploit (os, name, earliest_kernel_version, latest_kernel_version, file_path, disclosure_date)
    values ('linux', 'CVE-2017-100012', '4.4.0-21', '4.8.0-58', 'linux/CVE-2017-10012', '2017-09-14');